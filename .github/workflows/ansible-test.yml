---
name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
  #pull_request:
  # Run CI once per day (at 06:00 UTC)
  # This ensures that even if there haven't been commits that we are still testing against latest version of ansible-test for each ansible-base version
  #schedule:
  # - cron: '0 6 * * *'

jobs:
  #changelog:
  #  uses: ansible/ansible-content-actions/.github/workflows/changelog.yaml@main
  #  if: (github.event_name != 'schedule' && github.event_name != 'push' && !contains(github.event.pull_request.labels.*.name, 'new_resource_module') && !contains(github.event.pull_request.labels.*.name, 'documentation'))
  #sanity:
  #  uses: ansible/ansible-content-actions/.github/workflows/sanity.yaml@main
  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Process inputs
        id: inputs
        shell: bash
        run: |
          if [[ -n "${{ inputs.working_directory }}" ]]; then
            echo "working_directory=${{ inputs.working_directory }}" >> $GITHUB_OUTPUT
          else
            echo "working_directory=${{ github.workspace }}" >> $GITHUB_OUTPUT
          fi
      - name: Set up Python
        if: inputs.setup_python == 'true'
        uses: actions/setup-python@v5
        with:
          cache: pip
          cache-dependency-path: ${{ steps.inputs.outputs.working_directory }}/.git/ansible-lint-requirements.txt
          python-version: "3.11"
      - name: Install ansible-lint from pip
        shell: bash
        run: |
          pip install ansible-compat==24.10.0 ansible-lint
          ansible-lint --version
      - name: Run ansible-lint
        shell: bash
        working-directory: ${{ steps.inputs.outputs.working_directory }}
        run: ansible-lint ${{ inputs.args }}
      - name: Run ansible-lint again
        shell: bash
        working-directory: ${{ steps.inputs.outputs.working_directory }}
        run: ansible-lint ${{ inputs.args }}
